<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:openflux="com.openflux.*" xmlns:core="com.openflux.core.*" xmlns:layout="com.openflux.layout.*" xmlns:views="com.openflux.views.*" xmlns:layouts="com.openflux.layouts.*"
	creationComplete="initApp()"
	layout="absolute"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
	backgroundGradientColors="[#cccccc, #000000]">
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			//import com.openflux.views.ImageView;
			import flash.display.BitmapData;
			import flash.geom.Rectangle;
			import flash.geom.Point;
		
			public var loader:Loader;
			
			/*
			 * App has loaded, load the deck of cards image
			 */
			public function initApp():void {
				loader = new Loader();
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loaderComplete);
				loader.load(new URLRequest("assets/images/cards.png"));
			}
			
			/*
			 * Extract each card in the deck into their own object
			 * The object includes a label (rank of suit) and a Bitmap image of the card
			 */
			public function loaderComplete(event:Event):void {
				var suits:Array = ['Clubs', 'Diamonds', 'Hearts', 'Spades'];
				var ranks:Array = ['Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King'];
				var suitsIdx:Number = 0;
				var ranksIdx:Number = 0;
				var cardWidth:Number = 79;
				var cardHeight:Number = 123;
				var a:Array = [];
				var img:BitmapData;
				
				var d:BitmapData = Bitmap(loader.content).bitmapData;
				
				for (var i:int = 0; i < 52; i++) {
					img = new BitmapData(cardWidth, cardHeight);
					img.copyPixels(d, new Rectangle(ranksIdx * cardWidth, suitsIdx * cardHeight, cardWidth, cardHeight), new Point(0, 0));
					img.draw(img, new Matrix());
					a.push({label:String(ranks[ranksIdx]) + " of " + String(suits[suitsIdx]), image:new Bitmap(img)});
					
					if (i == 12 || i == 25 || i == 38) {						
						suitsIdx++;
						ranksIdx = 0;
					} else {
						ranksIdx++;
					}
				}
				
				l.dataProvider = a;
			}
		]]>
	</mx:Script>

	<openflux:List id="l" y="150" width="100%" height="100%">
		<openflux:view>
			<views:DataView>
				<views:layout>
					<layouts:StackLayout
						gap="{hs.value}"
						selectMode="{selectMode.selectedValue}"/>
				</views:layout>
			</views:DataView>
		</openflux:view>
	</openflux:List>
	
	<mx:Panel
		top="10"
		right="10"
		title="Layout Properties"
		layout="vertical"
		paddingLeft="5"
		paddingRight="5"
		verticalGap="0">
		<mx:Label
			text="Selected Items"
			fontWeight="bold"/>
		<mx:List
			dataProvider="{l.selectedItems}"
			width="150"
			height="100"/>
		<mx:Label
			text="Gap"
			fontWeight="bold"/>
		<mx:HSlider id="hs"
			value="5"
			width="150"
			maximum="10"
			liveDragging="true"/>	
		<mx:Label
			text="Select Mode"
			fontWeight="bold"/>
		<mx:HBox>
			<mx:RadioButtonGroup id="selectMode"
				selectedValue="ZigZag"/>
			<mx:RadioButton
				groupName="selectMode"
				label="ZigZag"/>
			<mx:RadioButton
				groupName="selectMode"
				label="Reveal"/>
		</mx:HBox>
	</mx:Panel>
</mx:Application>